name: Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - .gitignore
      - README.md
      - CONTRIBUTING.md
      - LICENSE
  pull_request:
    branches:
      - main

env:
  URL_CHECKER_TIMEOUT: 30 

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run linters
        run: npm run lint

      - name: Run scripts
        run: |
          for script in script/*; do
            node "$script"
          done

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Set PATH_PREFIX
        run: echo "PATH_PREFIX=/${{ github.event.repository.name }}/" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Build static pages
        run: npm run build

      - name: Upload site content
        uses: actions/upload-artifact@v3
        with:
          name: site
          path: _site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to GitHub Pages
        run: |
          echo "Deploying to GitHub Pages..."
          # Add your deploy script here
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create deployment issue
        run: |
          today=$(date +'%Y-%m-%d')
          outcome="succeeded"
          url="https://<URL>"
          gh issue create --title "$today - Deployment: $outcome" --body "URL: $url"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
