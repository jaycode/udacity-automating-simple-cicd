name: Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - .gitignore
      - README.md
      - CONTRIBUTING.md
      - LICENSE
  pull_request:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  URL_CHECKER_TIMEOUT: 30  # Set a reasonable timeout value for the URL checker script (in seconds)

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run linters
        run: npm run lint:all

      - name: Run scripts
        run: |
          for script in script/*.js; do
            node "$script"
          done

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v3 
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          enablement: true  # Enable GitHub Pages

      - name: Set PATH_PREFIX
        run: echo "PATH_PREFIX=/${{ github.event.repository.name }}/" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Build static pages
        run: npm run eleventy:prod

      - name: Upload site content
        uses: actions/upload-artifact@v3
        with:
          name: site
          path: _site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built site
        uses: actions/download-artifact@v3
        with:
          name: site
          path: _site
          
      - name: Deploy to GitHub Pages
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          if [ -d ".git" ]; then
            git remote set-url origin https://github.com/${{ github.repository }}
          else
            git init
            git remote add origin https://github.com/${{ github.repository }}
          fi
          git fetch origin
          git checkout -b gh-pages
          cp -r _site/* .
          git add -A
          git commit -m "Deploy to GitHub Pages"
          git push -f https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} gh-pages
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Report Deployment Status
        run: |
          today=$(date +'%Y-%m-%d')
          url="https://${{ github.actor }}.github.io/${{ github.event.repository.name }}/"
          if [ $? -eq 0 ]; then
            status="succeeded"
          else
            status="failed"
          fi
          gh issue create --title "$today - Deployment: $status" --body "URL: $url"
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}